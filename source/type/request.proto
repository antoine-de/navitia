import "type.proto";
package pbnavitia;

message CalendarsRequest {
    optional string start_date    	= 1;
    optional string end_date        = 2;
    optional int32 depth            = 3;
    optional int32 start_page       = 4;
    optional int32 count            = 5;
    optional string filter          = 6;
    repeated string forbidden_uris  = 7;
}

message DisruptionsRequest {
    optional string datetime        = 1;
    optional int32 period           = 2;
    optional int32 depth            = 3;
    optional int32 start_page       = 4;
    optional int32 count            = 5;
    optional string filter          = 6;
    repeated string forbidden_uris  = 7;
}

message PlacesRequest {
    required string q           = 1;
    repeated NavitiaType types  = 2;
    required int32 depth        = 3;
    required int32 count        = 4;
    repeated string admin_uris  = 5;
    optional int32 search_type  = 6;
}

message NextStopTimeRequest {
    required string departure_filter    = 1;
    required string arrival_filter      = 2;
    required string from_datetime       = 3;
    required int32 duration             = 4;
    required int32 depth                = 5;
    required int32 nb_stoptimes         = 7;
    optional int32 interface_version    = 8;
    required int32 start_page           = 9;
    required int32 count                = 10;
    optional int32 max_date_times       = 11;
    repeated string forbidden_uri       = 12;
    optional string calendar            = 13;
}

message StreetNetworkParams{
    optional string origin_mode         = 1;
    optional string destination_mode    = 2;
    optional int32 max_duration_to_pt   = 4;
    optional double walking_speed       = 3;
    optional double bike_speed          = 5;
    optional double car_speed           = 7;
    optional double bss_speed           = 9;
    optional string origin_filter       = 11;
    optional string destination_filter  = 12;
}


message JourneysRequest {
    repeated LocationContext origin			= 1;
    repeated LocationContext destination		= 2;    
    repeated string datetimes                           = 3;
    required bool clockwise                             = 4;
    repeated string forbidden_uris                      = 5;
    required int32 max_duration                         = 6;
    required int32 max_transfers                        = 7;
    optional StreetNetworkParams streetnetwork_params   = 8;
    required bool wheelchair                            = 9;
    required bool disruption_active                     = 10;
    optional bool details				= 11;
}

message PlacesNearbyRequest {
    required string uri         = 1;
    required double distance    = 2;
    repeated NavitiaType types  = 3;
    required int32 depth        = 4;
    required int32 count        = 5;
    required int32 start_page   = 6;
    optional string filter      = 7;
}

message PlaceUriRequest {
    required string uri = 1;
}

message PTRefRequest {
    required NavitiaType requested_type = 1;
    required string filter              = 2;
    required int32 depth                = 3;
    required int32 start_page           = 4;
    required int32 count                = 5;
    repeated string forbidden_uri       = 6;
}

message Request {
    required API requested_api                      = 1;

    optional PlacesRequest places                   = 2;
    optional NextStopTimeRequest next_stop_times    = 3;
    optional PlacesNearbyRequest places_nearby      = 4;
    optional JourneysRequest journeys               = 5;
    optional PTRefRequest ptref                     = 6;
    optional PlaceUriRequest place_uri              = 7;
    optional DisruptionsRequest disruptions         = 8;
    optional CalendarsRequest calendars             = 9;
}
